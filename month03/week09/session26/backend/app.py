import psycopg2
import os
DB_NAME = "Books"
DB_USER = "postgres"
DB_PASS = ""
DB_HOST = "localhost"
DB_PORT = "5433"

def clear_screen():
    os.system('cls' if os.name == 'nt' else 'clear')
def list_authors():
    conn = None
    try:
        conn = psycopg2.connect(
            database=DB_NAME,
            user=DB_USER,
            password=DB_PASS,
            host=DB_HOST,
            port=DB_PORT
        )
        cursor = conn.cursor()
        cursor.execute("select * from Authors")
        authors = cursor.fetchall()
        print("\n--- üìö –ë“Ø—Ö –ó–æ—Ö–∏–æ–≥—á–∏–¥ ---")
        for author in authors:
            print(f" ID: {author[0]}, –ù—ç—Ä: {author[1]}, –£–ª—Å: {author[2]}")
        print("------------------------\n")
    except psycopg2.Error as e:
        print(f"Database –∞–ª–¥–∞–∞: {e}")
    finally:
        if conn:
            cursor.close()
            conn.close()
def list_books_by_author():
    conn = None
    try:
        author_id = input("–ù–æ–º—É—É–¥—ã–≥ –Ω—å —Ö–∞—Ä–∞—Ö—ã–≥ —Ö“Ø—Å—Å—ç–Ω –∑–æ—Ö–∏–æ–≥—á–∏–π–Ω ID-–≥–æ—Ä—É—É–ª–Ω–∞ —É—É: ")
        conn = psycopg2.connect(
            database=DB_NAME,
            user=DB_USER,
            password=DB_PASS,
            host=DB_HOST,
            port=DB_PORT
        )
        cursor = conn.cursor()
        query = """
        SELECT b.title, b.publication_year, a.author_name
        FROM Books b
        JOIN Authors a ON b.author_id = a.author_id
        WHERE b.author_id = %s;
        """
        cursor.execute(query, (int(author_id),))
        books = cursor.fetchall()
        if books:
            author_name = books[0][2]
            print(f"\n--- ‚úç'{author_name}' –∑–æ—Ö–∏–æ–≥—á–∏–π–Ω –Ω–æ–º—É—É–¥ ---")
            for book in books:
                print(f" –ì–∞—Ä—á–∏–≥: {book[0]}, –•—ç–≤–ª—ç–≥–¥—Å—ç–Ω –æ–Ω: {book[1]}")
            print("-------------------------------------------\n")
        else:
            print(f"{author_id} ID-—Ç–∞–π –∑–æ—Ö–∏–æ–≥—á –æ–ª–¥—Å–æ–Ω–≥“Ø–π —ç—Å–≤—ç–ª –Ω–æ–º –±–∞–π—Ö–≥“Ø–π –±–∞–π–Ω–∞.")
    except (psycopg2.Error, ValueError) as e:
        print(f"–ê–ª–¥–∞–∞: {e}")
    finally:
        if conn:
            cursor.close()
            conn.close()

def add_book():
    conn = None
    try:
        author_id = input("–ù–æ–º –Ω—ç–º—ç—Ö –∑–æ—Ö–∏–æ–≥—á–∏–π–Ω ID-–≥ –æ—Ä—É—É–ª–Ω–∞ —É—É: ")
        title = input("–ù–æ–º—ã–Ω –≥–∞—Ä—á–≥–∏–π–≥ –æ—Ä—É—É–ª–Ω–∞ —É—É: ")
        year = input("–•—ç–≤–ª—ç–≥–¥—Å—ç–Ω –æ–Ω—ã–≥ –æ—Ä—É—É–ª–Ω–∞ —É—É: ")
        conn = psycopg2.connect(
            database=DB_NAME,
            user=DB_USER,
            password=DB_PASS,
            host=DB_HOST,
            port=DB_PORT
        )
        query = """
        INSERT INTO Books(title, publication_year, author_id)
        VALUES(%s, %s, %s)
        """
        cursor = conn.cursor()
        cursor.execute(query, (title, int(year), int(author_id)))
        conn.commit()
        print(f"\n‚úÖ '{title}' –Ω–æ–º—ã–≥ –∞–º–∂–∏–ª—Ç—Ç–∞–π –Ω—ç–º–ª—ç—ç!\n")
    except (psycopg2.Error, ValueError) as e:
        print(f"\n‚ùå –ê–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞: {e}")
        if conn:
            conn.rollback()
    finally:
        if conn:
            cursor.close()
            conn.close()

def main():
    while True:
        print("--- –ù–æ–º—ã–Ω –°–∞–Ω–≥–∏–π–Ω –ú–µ–Ω–µ–∂–µ—Ä ---")
        print("1. –ë“Ø—Ö –∑–æ—Ö–∏–æ–≥—á–∏–π–≥ —Ö–∞—Ä–∞—Ö")
        print("2. –ó–æ—Ö–∏–æ–≥—á–∏–π–Ω –Ω–æ–º—É—É–¥—ã–≥ —Ö–∞—Ä–∞—Ö")
        print("3. –®–∏–Ω—ç –Ω–æ–º –Ω—ç–º—ç—Ö")
        print("4. –ì–∞—Ä–∞—Ö")
        choice = input("–¢–∞ —Å–æ–Ω–≥–æ–ª—Ç–æ–æ —Ö–∏–π–Ω—ç “Ø“Ø (1-4): ")
        clear_screen()
        if choice == '1':
            list_authors()
        elif choice == '2':
            list_books_by_author()
        elif choice == '3':
            add_book()
        elif choice == '4':
            print("–ë–∞—è—Ä—Ç–∞–π!")
            break
        else:
            print("–ë—É—Ä—É—É —Å–æ–Ω–≥–æ–ª—Ç. 1-4 —Ö–æ–æ—Ä–æ–Ω–¥ —Å–æ–Ω–≥–æ–Ω–æ —É—É.")
        input("\n“Æ—Ä–≥—ç–ª–∂–ª“Ø“Ø–ª—ç—Ö–∏–π–Ω —Ç—É–ª–¥ Enter –¥–∞—Ä–Ω–∞ —É—É...")
        clear_screen()
if __name__ == "__main__":
    main()